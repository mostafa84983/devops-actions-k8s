name: CI/CD to Kubernetes

on:
  push:
    branches:
      - master

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to ECR
      run: |
        IMAGE_TAG=${GITHUB_SHA::7}   # short commit hash
        ECR_REPO=${{ secrets.ECR_REPOSITORY }}
        docker build -t $ECR_REPO:$IMAGE_TAG ./app
        docker push $ECR_REPO:$IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    # - name: Copy manifests to EC2
    #   uses: appleboy/scp-action@v0.1.7
    #   with:
    #     host: ${{ secrets.EC2_HOST }}
    #     username: ${{ secrets.EC2_USER }}
    #     key: ${{ secrets.EC2_SSH_KEY }}
    #     source: "k8s/*.yaml"
    #     target: "~"

    - name: Update Kubernetes manifests
      run: |
        sed -i "s|image: .*|image: ${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}|" k8s/deployment.yaml
        echo "Updated deployment image to ${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
    - name: kubeconfig Configuration
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config
    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f ~/k8s/deployment.yaml -n demo
        kubectl apply -f ~/k8s/service.yaml -n demo
        kubectl rollout status deployment/flask-app -n demo
        kubectl get all -n demo

    # - name: Deploy to EC2 via SSH
    #   uses: appleboy/ssh-action@v0.1.10
    #   with:
    #     host: ${{ secrets.EC2_HOST }}
    #     username: ${{ secrets.EC2_USER }}
    #     key: ${{ secrets.EC2_SSH_KEY }}
    #     script: |
    #       export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
    #       sudo kubectl apply -f ~/k8s/deployment.yaml -n demo --validate=false
    #       sudo kubectl apply -f ~/k8s/service.yaml -n demo --validate=false
    #       sudo kubectl set image deployment/flask-app \
    #           flask-app=${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG -n demo
    #       sudo kubectl rollout status deployment/flask-app -n demo

